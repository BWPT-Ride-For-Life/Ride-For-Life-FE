{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\JBrown\\\\Ride-For-Life-FE\\\\ride-for-life\\\\Ride-For-Life-FE-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\JBrown\\\\Ride-For-Life-FE\\\\ride-for-life\\\\Ride-For-Life-FE-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\JBrown\\\\Ride-For-Life-FE\\\\ride-for-life\\\\Ride-For-Life-FE-development\\\\src\\\\components\\\\DebounceSearch.js\";\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport { axiosWithAuth } from '../utils/AxiosWithAuth';\n\nconst debounceFunction = () => {};\n\nconst debounce = AwesomeDebouncePromise(debounceFunction, 350);\n\nconst DebounceSearch = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        options = _useState2[0],\n        setOptions = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        value = _useState4[0],\n        setValue = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        inputValue = _useState6[0],\n        setInputValue = _useState6[1];\n\n  const handleValueChanged = option => {\n    setValue(option.driver);\n  };\n\n  const handleInputValueChanged = async search => {\n    setInputValue(search);\n    await debounce();\n\n    if (search.length > 3) {\n      axiosWithAuth().get(\"url?search=\" + search).then(response => {\n        let searchOptions = [];\n        response.data.forEach(driver => {\n          searchOptions.push({\n            value: driver.id,\n            label: driver.name,\n            driver: _objectSpread({}, driver)\n          });\n        });\n      }).catch(() => setOptions([]));\n    }\n  };\n\n  let displayValue = null;\n  options.forEach(option => {\n    if (option.id === value.id) {\n      displayValue = option;\n    }\n  });\n  return React.createElement(Select, {\n    options: options,\n    value: displayValue,\n    inputValue: inputValue,\n    onChange: handleValueChanged,\n    onInputChange: handleInputValueChanged,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  });\n};\n\nexport default DebounceSearch;","map":{"version":3,"sources":["C:/Users/JBrown/Ride-For-Life-FE/ride-for-life/Ride-For-Life-FE-development/src/components/DebounceSearch.js"],"names":["React","useState","Select","AwesomeDebouncePromise","axiosWithAuth","debounceFunction","debounce","DebounceSearch","options","setOptions","value","setValue","inputValue","setInputValue","handleValueChanged","option","driver","handleInputValueChanged","search","length","get","then","response","searchOptions","data","forEach","push","id","label","name","catch","displayValue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAEA,MAAMC,gBAAgB,GAAG,MAAM,CAAE,CAAjC;;AACA,MAAMC,QAAQ,GAAGH,sBAAsB,CAACE,gBAAD,EAAmB,GAAnB,CAAvC;;AAEA,MAAME,cAAc,GAAG,MAAM;AAAA,oBACKN,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,QAClBO,OADkB;AAAA,QACTC,UADS;;AAAA,qBAECR,QAAQ,CAAC,IAAD,CAFT;AAAA;AAAA,QAElBS,KAFkB;AAAA,QAEXC,QAFW;;AAAA,qBAGWV,QAAQ,CAAC,EAAD,CAHnB;AAAA;AAAA,QAGlBW,UAHkB;AAAA,QAGNC,aAHM;;AAKzB,QAAMC,kBAAkB,GAAIC,MAAD,IAAY;AACnCJ,IAAAA,QAAQ,CAACI,MAAM,CAACC,MAAR,CAAR;AACH,GAFD;;AAIA,QAAMC,uBAAuB,GAAG,MAAOC,MAAP,IAAkB;AAC9CL,IAAAA,aAAa,CAACK,MAAD,CAAb;AAEA,UAAMZ,QAAQ,EAAd;;AAEA,QAAIY,MAAM,CAACC,MAAP,GAAgB,CAApB,EAAuB;AACnBf,MAAAA,aAAa,GACRgB,GADL,CACS,gBAAgBF,MADzB,EAEKG,IAFL,CAEWC,QAAD,IAAc;AAChB,YAAIC,aAAa,GAAG,EAApB;AACAD,QAAAA,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAuBT,MAAD,IAAY;AAC9BO,UAAAA,aAAa,CAACG,IAAd,CAAmB;AACfhB,YAAAA,KAAK,EAAEM,MAAM,CAACW,EADC;AAEfC,YAAAA,KAAK,EAAEZ,MAAM,CAACa,IAFC;AAGfb,YAAAA,MAAM,oBAAOA,MAAP;AAHS,WAAnB;AAKH,SAND;AAOH,OAXL,EAYKc,KAZL,CAYW,MACHrB,UAAU,CAAC,EAAD,CAblB;AAeH;AACJ,GAtBD;;AAwBA,MAAIsB,YAAY,GAAG,IAAnB;AACAvB,EAAAA,OAAO,CAACiB,OAAR,CAAiBV,MAAD,IAAY;AACxB,QAAIA,MAAM,CAACY,EAAP,KAAcjB,KAAK,CAACiB,EAAxB,EAA4B;AACxBI,MAAAA,YAAY,GAAGhB,MAAf;AACH;AACJ,GAJD;AAMA,SACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEP,OAAjB;AAA0B,IAAA,KAAK,EAAEuB,YAAjC;AAA+C,IAAA,UAAU,EAAEnB,UAA3D;AAAuE,IAAA,QAAQ,EAAEE,kBAAjF;AAAqG,IAAA,aAAa,EAAEG,uBAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CA3CD;;AA6CA,eAAeV,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport Select from 'react-select';\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport { axiosWithAuth } from '../utils/AxiosWithAuth'\n\nconst debounceFunction = () => {}\nconst debounce = AwesomeDebouncePromise(debounceFunction, 350);\n\nconst DebounceSearch = () => {\n    const [options, setOptions] = useState([]);\n    const [value, setValue] = useState(null);\n    const [inputValue, setInputValue] = useState(\"\");\n\n    const handleValueChanged = (option) => {\n        setValue(option.driver);\n    }\n\n    const handleInputValueChanged = async (search) => {\n        setInputValue(search);\n\n        await debounce();\n\n        if (search.length > 3) {\n            axiosWithAuth()\n                .get(\"url?search=\" + search)\n                .then((response) => {\n                    let searchOptions = [];\n                    response.data.forEach((driver) => {\n                        searchOptions.push({\n                            value: driver.id,\n                            label: driver.name,\n                            driver: { ...driver }\n                        });\n                    });\n                })\n                .catch(() =>\n                    setOptions([])\n                )\n        }\n    }\n\n    let displayValue = null;\n    options.forEach((option) => {\n        if (option.id === value.id) {\n            displayValue = option;\n        }\n    });\n\n    return (\n        <Select options={options} value={displayValue} inputValue={inputValue} onChange={handleValueChanged} onInputChange={handleInputValueChanged} />\n    );\n}\n\nexport default DebounceSearch;"]},"metadata":{},"sourceType":"module"}